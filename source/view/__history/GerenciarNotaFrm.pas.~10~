unit GerenciarNotaFrm;

interface

uses
  Winapi.Windows,
  Winapi.Messages,
  System.SysUtils,
  System.JSON,
  System.Generics.Collections,
  System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms,
  Vcl.Dialogs, Vcl.StdCtrls, Vcl.Grids, Vcl.ExtCtrls;

type
  TFrmGerenciarNota = class(TForm)
    pnlHeader: TPanel;
    lblTitulo: TLabel;
    gridNotas: TStringGrid;
    btnConcluir: TButton;
    btnNova: TButton;
    procedure btnNovaClick(Sender: TObject);
    procedure btnConcluirClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmGerenciarNota: TFrmGerenciarNota;

implementation

{$R *.dfm}

uses
  NotaFrm,
  Utils,
  FaturamentoService,
  Nota;

procedure TFrmGerenciarNota.btnConcluirClick(Sender: TObject);
  var SelectedRow: Integer;
  var NotaID: Integer;
  var LMsg: String;
begin

  SelectedRow := gridNotas.Row;
  NotaID := StrToIntDef(gridNotas.Cells[0, SelectedRow], -1);
  if NotaID = -1 then
    Exit;

  ProcessaRetorno(
    TFaturamentoService
    .New
      .ConsultarNotaFiscal(
        NotaID
      ),
    LMsg
  );
  ShowMessage(LMsg);
end;

procedure TFrmGerenciarNota.btnNovaClick(Sender: TObject);
begin

  FrmNota := TFrmNota.Create(nil);
  try
    FrmNota.ShowModal;
  finally
    FrmNota.Free;
  end;

end;

procedure TFrmGerenciarNota.FormCreate(Sender: TObject);
 var JsonArray: TJSONArray;
 var NotaList: TObjectList<TNota>;
 var i: Integer;
begin
  JsonArray :=
    TFaturamentoService
    .New
    .ConsultarNotaFiscal();



end;

end.
